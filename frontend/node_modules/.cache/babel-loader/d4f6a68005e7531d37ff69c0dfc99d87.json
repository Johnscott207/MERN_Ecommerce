{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\ECommerce\\\\frontend\\\\src\\\\component\\\\addCart.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"./card\";\nimport useGlobalState from \"../globalState\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCart() {\n  _s();\n\n  let navigate = useNavigate();\n  const [email, setEmail] = useGlobalState('email');\n  const [list, setList] = useState([]);\n  const [count, setCount] = useState(false);\n  useEffect(() => {\n    var url = new URL(window.location.host + \"/api/cart_product\"); //url.searchParams.append('x', 42);\n\n    url.searchParams.append('id', btoa(email)); //console.log(email + \" \" + count);\n\n    if (email && count) {\n      if (count) {\n        setCount(false);\n      }\n\n      ;\n      fetch(\"http://\" + url.href).then(response => response.json()).then(data => {\n        data.forEach(e => {\n          fetch(\"/api/product/\" + e.productId).then(response => response.json()).then(data => {\n            setList(list => [...list, data]); // alert(JSON.stringify(data));\n            // console.log(data)\n          });\n        }); // console.log(data)\n      });\n    }\n\n    setCount(true);\n  }, [email, count]);\n\n  var clickme = id => {\n    var data = {\n      email: email,\n      productId: id\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: btoa(JSON.stringify(data))\n      },\n      body: {}\n    };\n    fetch('/api/remove_cart', requestOptions).then(response => response.json()).then(data => {\n      //setLog(data.log);\n      //alert(JSON.stringify(data));\n      if (data.log) {\n        setList([]); //navigate(\"/cart\", { replace: true });\n      }\n    });\n  };\n\n  var listItems = list.map((e, i) => /*#__PURE__*/_jsxDEV(Card, {\n    object: e,\n    click: clickme\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 40\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid add_cart\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddCart, \"V//IEumU9MYPEMMoaE/fyPD4dG8=\", false, function () {\n  return [useNavigate, useGlobalState];\n});\n\n_c = AddCart;\nexport default AddCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCart\");","map":{"version":3,"names":["Card","useGlobalState","useNavigate","useEffect","useState","AddCart","navigate","email","setEmail","list","setList","count","setCount","url","URL","window","location","host","searchParams","append","btoa","fetch","href","then","response","json","data","forEach","e","productId","clickme","id","requestOptions","method","headers","Authorization","JSON","stringify","body","log","listItems","map","i"],"sources":["C:/Users/prana/Desktop/ECommerce/frontend/src/component/addCart.js"],"sourcesContent":["import Card from \"./card\";\r\nimport useGlobalState from \"../globalState\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nfunction AddCart() {\r\n    let navigate = useNavigate();\r\n    const [email, setEmail] = useGlobalState('email');\r\n    const [list, setList] = useState([]);\r\n    const [count, setCount] = useState(false);\r\n    useEffect(() => {\r\n        var url = new URL(window.location.host + \"/api/cart_product\");\r\n        //url.searchParams.append('x', 42);\r\n        url.searchParams.append('id', btoa(email))\r\n        //console.log(email + \" \" + count);\r\n        if (email && count) {\r\n            if (count) { setCount(false) };\r\n\r\n            fetch(\"http://\" + url.href)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    data.forEach(e => {\r\n                        fetch(\"/api/product/\" + e.productId)\r\n                            .then(response => response.json())\r\n                            .then(data => {\r\n                                setList(list => [...list, data]);\r\n                                // alert(JSON.stringify(data));\r\n                                // console.log(data)\r\n                            });\r\n                    })\r\n                    // console.log(data)\r\n                });\r\n        }\r\n\r\n        setCount(true);\r\n    }, [email, count]);\r\n\r\n    var clickme = (id) => {\r\n        var data = {\r\n            email: email,\r\n            productId: id\r\n        };\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json', Authorization: btoa(JSON.stringify(data)) },\r\n            body: {}\r\n        };\r\n        fetch('/api/remove_cart', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                //setLog(data.log);\r\n\r\n                //alert(JSON.stringify(data));\r\n                if (data.log) {\r\n                    setList([]);\r\n                    //navigate(\"/cart\", { replace: true });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    var listItems = list.map((e, i) => <Card key={i} object={e} click={clickme} />);\r\n    return (\r\n        <div className=\"container-fluid add_cart\">\r\n            <div className=\"container\">\r\n                {listItems}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}